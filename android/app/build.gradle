def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.mob.sdk'
apply plugin: 'seal'

def projectRoot = project.getRootProject().rootDir.absolutePath
android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.ghost.thermoai"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    //增加签名文件
    signingConfigs {
        release {
            storeFile file("../keystore/android.keystore")
            storePassword "111111"
            keyAlias "android.keystore"
            keyPassword "111111"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }

    //添加
    def manifestPath = [
            // for AAR of Release
            // see note below
            projectRoot + '/build-cache',
            projectRoot + '/rammus',
            // for AAR of SNAPSHOT
            projectRoot + '/app/build/intermediates/exploded-aar'
    ]

    def removeAttrs = [
            'android:theme'
    ]

    def replaceValues = [
            'android:theme'
    ]


    seal {
        enabled = true
        manifests = manifestPath

        appAttrs {
            enabled = true
            attrsShouldRemove = removeAttrs
        }

        appReplaceValues {
            enabled = true
            valuesShouldRemove = replaceValues
        }
    }
}

flutter {
    source '../..'
}
MobSDK {
    appKey "2df0f9372f598"
    appSecret "afeae43657715eab6548c60e9ddd546e"

    ShareSDK {
        //平台配置信息
        devInfo {
            Wechat {
                appId "wx9af9b57fa99042f5"
                appSecret "f89725582f66ed27ae17239f0de57431"
            }
            QQ {
                appId "1110255218"
                appKey "KEVOjmNgXbMTaEfu"
                shareByAppClient true
            }
            SinaWeibo {
                appKey "1044815840"
                appSecret "c150477094bc8c045b87826b89ff9c07"
                callbackUri "http://mobile.iqihang.com"
                shareByAppClient true
            }
        }
    }
}
dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    compile 'com.android.support:multidex:1.0.1'
}
